# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

name: Build and deploy Python app to Azure Web App

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python version
        uses: actions/setup-python@v1
        with:
          python-version: '3.9'

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
      
      - name: Install dependencies
        run: pip install -r requirements.txt
        
      - name: Copy settings.yml
        run: cp settings-example.yml settings.yml
      
      - name: Put production details for settings.yml
        run: yq -i '
              .google.client_id = "${{ secrets.GCP_PRODUCTION_CLIENT_ID }}" |
              .google.client_secret = "${{ secrets.GCP_PRODUCTION_CLIENT_SECRET }}" |
              .google.redirect_uri = "https://pypy.ga/account/auth" |
              .google.email_regex = "^js22-(\d+)@sonline20\.sen\.go\.kr$" |
              
              .db.type = "azure-sql" |
              .db.name = "${{ secrets.AZURE_SQL_NAME }}" |
              .db.user = "${{ secrets.AZURE_SQL_USER }}" |
              .db.password = "${{ secrets.AZURE_SQL_PASSWORD }}" |
              .db.host = "${{ secrets.AZURE_SQL_HOST }}" |
              .db.port = "${{ secrets.AZURE_SQL_PORT }}" |
              
              .db.driver = "freetds"
              
              .production = false
            ' settings.yml
      
      - name: Collect static files
        run: python manage.py collectstatic

      # Optional: Add step to run tests here (PyTest, Django test suites, etc.)
      
      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v2
        with:
          name: python-app
          path: |
            . 
            !venv/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: python-app
          path: .
          
      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v2
        id: deploy-to-webapp
        with:
          app-name: 'pypyga'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_8B1DC41E2A3B4B03B72C4DE1F3830475 }}
